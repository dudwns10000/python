{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "fef000c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "홍길동\n",
      "25\n"
     ]
    }
   ],
   "source": [
    "# 단축기\n",
    "# shift + enter : 실행 후 다음 cell로 이동.\n",
    "# control + enter : 실행 후 실행 한 cell에 머무른다.\n",
    "# control + /   : 주석 달기\n",
    "\n",
    "# 변수 \n",
    "name = \"홍길동\" #\"홍길동\" 이라는 값을 name이라는 변수에 대입. \n",
    "                # 이름이 name인 공간이 메모리에 없으면 새로 만든다. 있으면 있는 공간에 대입한다.\n",
    "print(name)     # print(값) = ()안의 값을 출력하는 함수\n",
    "\n",
    "age = 25\n",
    "print(age)      # age 변수의 값을 출력"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "cbbff9f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이순신\n",
      "50\n"
     ]
    }
   ],
   "source": [
    "name = \"이순신\" # name 변수의 값 재할당\n",
    "print(name)\n",
    "age = 50        # age 변수의 값을 재할당\n",
    "print(age)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ca9e7dbc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "70\n",
      "90\n"
     ]
    }
   ],
   "source": [
    "age = age + 20      # agr 변수가 가진 값과 20을 더한 후 age변수에 대입 \n",
    "print(age) \n",
    "age += 20\n",
    "print(age)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c857446b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n"
     ]
    }
   ],
   "source": [
    "age2 = age - 40\n",
    "print(age2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0dc54f25",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "서울시 서초구\n"
     ]
    }
   ],
   "source": [
    "우리집_주소 = \"서울시 서초구\" #특수문자는 _ 사용가능.(snake 표기법), myEmailAddress는 camel 표기법\n",
    "print(우리집_주소)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b18f23af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20 20 20\n"
     ]
    }
   ],
   "source": [
    "a = b = c = 20       # 여러개 변수에 같은 값을 대입\n",
    "print(a,b,c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f464b006",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 20 30\n"
     ]
    }
   ],
   "source": [
    "a, b, c = 10, 20, 30 # 여러개의 값을 여러개의 변수에 대입 (Tuple 대입)\n",
    "print(a,b,c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "cc26fd54",
   "metadata": {},
   "outputs": [],
   "source": [
    "# del a = 변수 삭제\n",
    "# 값, 변수의 타입을 확인하는 함수 = tyope(닶)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2e115a17",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5 356.7\n"
     ]
    }
   ],
   "source": [
    "# 데이터 타입\n",
    "# 숫자형\n",
    "\n",
    "f1 = 0.5  #정수부가 0일 경우 0은 생략 가능  \n",
    "f2 = 356.7\n",
    "print(f1, f2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d92a761b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30000000000.0 <class 'float'>\n"
     ]
    }
   ],
   "source": [
    "# 지수표기법\n",
    "\n",
    "f3 = 3e10  # 3 x 10**10\n",
    "print(f3, type(f3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "737955f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "243\n",
      "3.3333333333333335\n",
      "3\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "print(3**5)  # 제곱연산자\n",
    "print(10/3)  # 나누기\n",
    "print(10//3) # 몫\n",
    "print(10%3)  # 나머지"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9f58f2bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True False\n"
     ]
    }
   ],
   "source": [
    "# 논리형\n",
    "b1 = True\n",
    "b2 = False\n",
    "print(b1, b2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "21ce7cbe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False True True\n",
      "False False True True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "# boll(값) - 다른 타입의 값을 논리형으로 변환\n",
    "# 빈문자열, 0, Nome => False\n",
    "print(bool(''), bool('abc'), bool(' '))\n",
    "print(bool(0), bool(0.0), bool(50), bool(-50))\n",
    "print(bool(None))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8809e83f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n",
      "True\n",
      "True\n",
      "False\n",
      "True\n",
      "False\n",
      "True\n",
      "False\n",
      "97 98\n"
     ]
    }
   ],
   "source": [
    "# 비교연산자\n",
    "print(5 == 10)\n",
    "print(10 == 10)\n",
    "print(5 != 10)\n",
    "print(10 != 10)\n",
    "print(10 > 5)\n",
    "print(10 < 5)\n",
    "print(10 >= 10)\n",
    "print('a' > 'b')\n",
    "print(ord('a'), ord('b'))  # 문자를 숫자로 변경"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d65913d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
    "num = 10       # num이 5 ~ 20 사이의 숫자인가?\n",
    "result = (num > 5) & (num < 20)   # and(&) 사용\n",
    "print(result)\n",
    "result1 = (num < 5) | (num > 20)\n",
    "print(result1)  # num이 5 ~ 20 사이 밖의 숫자인가?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0bc41bf7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "음수\n"
     ]
    }
   ],
   "source": [
    "# 조건 연산자\n",
    "num = -10\n",
    "var = '양수' if num >= 0 else '음수'\n",
    "print(var)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ede3c9ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "나이 : 20\n",
      "키 : 178.8\n"
     ]
    }
   ],
   "source": [
    "age = 20\n",
    "tall = 178.8\n",
    "print(\"나이 : \"+str(age))\n",
    "print(\"키 : \" +str(tall))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "31b4f0d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "홍길동 3\n"
     ]
    }
   ],
   "source": [
    "name = '홍길동'\n",
    "print(name, len(name))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ca3eb8f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True False\n"
     ]
    }
   ],
   "source": [
    "addr = '서울시 서초구 서초동'\n",
    "r = \"서초구\" in addr  #addr 문자열 안에 \"서초구\" 문자열이 있냐?\n",
    "r2 = \"종로구\" in addr\n",
    "print(r, r2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "aa388121",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a 20 30 3.2323\n",
      "a|20|30|3.2323\n"
     ]
    }
   ],
   "source": [
    "print(\"a\", 20, \"30\", 3.2323)\n",
    "print(\"a\", 20, \"30\", 3.2323, sep='|')  # sep=  구분짓는데 사용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3676ec3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a 20 30 3.2323-a 20 30 3.2323\n"
     ]
    }
   ],
   "source": [
    "print(\"a\", 20, \"30\", 3.2323, end='-')  # end는 출력할 값뒤에 붙일값을 변경한다\n",
    "print(\"a\", 20, \"30\", 3.2323)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "677a9abb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2번 index 글자 : 하\n",
      "뒤에서 2번째 글자 : 세\n"
     ]
    }
   ],
   "source": [
    "# 인덱싱\n",
    "s = \"안녕하세요\"\n",
    "print(\"2번 index 글자 :\", s[2])\n",
    "print(\"뒤에서 2번째 글자 :\", s[-2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "aa8636a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14\n",
      "cegi\n",
      "abcdefghijklmn\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s = \"abcdefghijklmn\"\n",
    "print(len(s))  # 14글자 = index: 0 ~ 13\n",
    "print(s[2:10:2])  # 범위: 2 ~ (10-1)9 간격: 2  => 2, 4, 6, 8\n",
    "print(s[:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "123ec88c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이름:홍길동\n",
      "나이:10\n",
      "주소:서울\n"
     ]
    }
   ],
   "source": [
    "# formatting 문자열\n",
    "\n",
    "name1, age1, address1 = '홍길동', 10, '서울'\n",
    "name2, age2, address2 = '이순신', 10, '인천'\n",
    "info1 = \"이름:\" + name1 + \"\\n나이:\" + str(age1) + \"\\n주소:\" + address1\n",
    "print(info1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "1ecaa97f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이름: 홍길동 \n",
      "나이: 10 \n",
      "주소: 서울\n"
     ]
    }
   ],
   "source": [
    "info_layout = \"이름: {} \\n나이: {} \\n주소: {}\"  # {} => 나중에 값이 들어갈 자리\n",
    "info1 = info_layout.format(name1, age1, address1)  # 변수들이 layout의 {}에 순서대로 들어감\n",
    "print(info1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "cf55d777",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이름: 홍길동 \n",
      "나이: 10 \n",
      "주소: 서울\n",
      "이름: 홍길동 \n",
      "나이: 10 \n",
      "주소: 서울\n"
     ]
    }
   ],
   "source": [
    "# {0}: 첫번쨰 값, {1}: 두번쨰 값\n",
    "# 동일한 값을 여러군데에서 사용할 경우\n",
    "print(\"이름: {0} \\n나이: {1} \\n주소: {2}\".format(name1, age1, address1))\n",
    "# {name}: 괄호의 이름지정, 값 전달시 괄호이름=값    \n",
    "print(\"이름: {name} \\n나이: {age} \\n주소: {addr}\".format(name=name1, age=age1, addr=address1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "c637a7bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이름: 홍길동, \n",
      "나이: 23, \n",
      "몸무게: 72.700\n"
     ]
    }
   ],
   "source": [
    "# 형식문자를 이용한 문자열 formatting\n",
    "# %s-string, %d - int, %f-float\n",
    "name, age, weight = '홍길동', 23, 72.7\n",
    "info = \"이름: %s, \\n나이: %d, \\n몸무게: %.3f\"%(name, age, weight)\n",
    "print(info)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "8a60e0b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "이름:홍길동, 나이: 23, 몸무게: 72.7\n"
     ]
    }
   ],
   "source": [
    "# f-string\n",
    "name, age, weight = '홍길동', 23, 72.7\n",
    "print(f\"이름:{name}, 나이: {age}, 몸무게: {weight}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "6cc18132",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['사과귤', '배', '수박', '복숭아']"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 문자열 관련 함수/메소드\n",
    "s = \"사과귤,배,수박,복숭아\"\n",
    "s.split(',')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "3b27b1cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'abc'"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s2 = \"   abc   \"\n",
    "s2.lstrip()  # 왼쪽공백 삭제\n",
    "s2.rstrip()  # 오른쪽공백 삭제\n",
    "s2.strip()  # 모든공백 삭제"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "d3fbe555",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'가c가c가c'"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s3 = \"abcabcabc\"\n",
    "s3.replace('ab','가')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "1b601455",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(len(s3)) \n",
    "s3.count('a')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "b829e844",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1546\n"
     ]
    }
   ],
   "source": [
    "# 타입변환\n",
    "\n",
    "num1 = input() # 사용자로부터 값을 입력받을 때 사용, 입력받은 값을 str로 변환\n",
    "               # 문자열로 변환"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "c71ae7b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "num1:20\n"
     ]
    }
   ],
   "source": [
    "num1 = input(\"num1:\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "5571009a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "num2:30\n"
     ]
    }
   ],
   "source": [
    "num2 = input(\"num2:\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "25f99a73",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2030\n",
      "50\n"
     ]
    }
   ],
   "source": [
    "print(num1+num2)\n",
    "# 덧셈을 하려면 문자열을 정수/실수로 변환\n",
    "print(int(num1) + int(num2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96944367",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
